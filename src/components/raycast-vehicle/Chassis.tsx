import { useGLTF } from "@react-three/drei";
import { forwardRef } from "react";
import type { Material, Mesh } from "three";
import { type GLTF } from 'three-stdlib';

useGLTF.preload("/Beetle.glb");

// Initially Auto-generated by: https://github.com/pmndrs/gltfjsx
// Model via KrStolorz on Sketchfab, CC-BY-4.0
// https://sketchfab.com/3d-models/low-poly-volkswagen-beetle-f680ad7e98e445eaafed1a70f2c53911

const carMaterials = [
  "mt_PalleteBR",
  "mt_Pallete_Red",
  "mt_PalleteBR_Glass",
  "mt_Pallete_White",
] as const;
type CarMaterial = (typeof carMaterials)[number];

const carNodes = ["Cube008", "Cube008_1", "Cube008_2", "Cube008_3"] as const;
type CarNode = (typeof carNodes)[number];

type BeetleGLTF = GLTF & {
  materials: Record<CarMaterial, Material>;
  nodes: Record<CarNode, Mesh>;
};

// eslint-disable-next-line react/display-name
export const Chassis = forwardRef<Mesh>((props, ref) => {
  const { nodes, materials } = useGLTF(
    "/CarNoTireFinal-transformed.glb"
  ) as BeetleGLTF;

  return (
    <mesh ref={ref}>
      <group position={[-0.002, 0, -0.021]}>
        <mesh
          geometry={nodes.Cube008.geometry}
          material={materials.mt_PalleteBR}
        />
        <mesh
          geometry={nodes.Cube008_1.geometry}
          material={materials.mt_Pallete_Red}
        />
        <mesh
          geometry={nodes.Cube008_2.geometry}
          material={materials.mt_PalleteBR_Glass}
        />
        <mesh
          geometry={nodes.Cube008_3.geometry}
          material={materials.mt_Pallete_White}
        />
      </group>
    </mesh>
  );
});
